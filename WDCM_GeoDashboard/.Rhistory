## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "WDCM_GeoDashboard", # The Name of the package containing the App
pkg_title = "Wikidata Concepts Monitor Geo Dashboard", # The Title of the package containing the App
pkg_description = "Wikidata items interactive maps w. usage statistics for GLAM categories and more.", # The Description of the package containing the App
author_first_name = "Goran", # Your First Name
author_last_name = "Milovanović", # Your Last Name
author_email = "goran.milovanovic_ext@wikimedia.de", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
## Set {golem} options ----
golem::set_golem_options()
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "WDCMGeoDashboard", # The Name of the package containing the App
pkg_title = "Wikidata Concepts Monitor Geo Dashboard", # The Title of the package containing the App
pkg_description = "Wikidata items interactive maps w. usage statistics for GLAM categories and more.", # The Description of the package containing the App
author_first_name = "Goran", # Your First Name
author_last_name = "Milovanović", # Your Last Name
author_email = "goran.milovanovic_ext@wikimedia.de", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
## Set {golem} options ----
golem::set_golem_options()
## Create Common Files ----
## See ?usethis for more information
usethis::use_gpl_license(version = 2, include_future = TRUE)
usethis::use_readme_rmd(open = FALSE)
usethis::use_code_of_conduct()
## Use git ----
usethis::use_git()
# Building a Prod-Ready, Robust Shiny Application.
#
# README: each step of the dev files is optional, and you don't have to
# fill every dev scripts before getting started.
# 01_start.R should be filled at start.
# 02_dev.R should be used to keep track of your development during the project.
# 03_deploy.R should be used once you need to deploy your app.
#
#
########################################
#### CURRENT FILE: ON START SCRIPT #####
########################################
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "WDCMGeoDashboard", # The Name of the package containing the App
pkg_title = "Wikidata Concepts Monitor Geo Dashboard", # The Title of the package containing the App
pkg_description = "Wikidata items interactive maps w. usage statistics for GLAM categories and more.", # The Description of the package containing the App
author_first_name = "Goran", # Your First Name
author_last_name = "Milovanović", # Your Last Name
author_email = "goran.milovanovic_ext@wikimedia.de", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
## Set {golem} options ----
golem::set_golem_options()
## Create Common Files ----
## See ?usethis for more information
usethis::use_gpl_license(version = 2, include_future = TRUE)
usethis::use_readme_rmd(open = FALSE)
usethis::use_code_of_conduct()
# usethis::use_lifecycle_badge("Experimental")
# usethis::use_news_md(open = FALSE)
## Use git ----
usethis::use_git()
## Init Testing Infrastructure ----
## Create a template for tests
golem::use_recommended_tests()
## Use Recommended Packages ----
golem::use_recommended_deps()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
run_app()
## If you want to deploy to ShinyProxy
golem::add_dockerfile_shinyproxy()
